##########################################################################
# PostgreSQL
##########################################################################
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: gitlab
    tiers: database
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: gitlab
    tiers: database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-db
  labels:
    app: gitlab
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 512Mi
  selector:
    matchLabels:
      app: gitlab
      tiers: database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gitlab-dblog
  labels:
    app: gitlab
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 512Mi
  selector:
    matchLabels:
      app: gitlab
      tiers: database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab
        tiers: database
    spec:
      containers:
      - image: amd64/postgres:9.4
        name: postgres
        env:
        - name: POSTGRES_DB
          value: gitlab
        - name: POSTGRES_USER
          value: gitlab
        # $ kubectl create secret generic postgres-pass --from-file=gitlab.postgres.password.txt
        # make sure postgres.password.txt does not have a trailing newline
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-postgres-pass
              key: gitlab.postgres.password.txt
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: gitlab-db
          mountPath: /var/lib/postgresql/data
        - name: gitlab-dblog
          mountPath: /var/log/postgresql
      volumes:
      - name: gitlab-db
        persistentVolumeClaim:
          claimName: gitlab-db
      - name: gitlab-dblog
        persistentVolumeClaim:
          claimName: gitlab-dblog
---
##########################################################################
# Redis
##########################################################################
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: gitlab
spec:
  ports:
    - name: redis-tcp
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app: gitlab
    tier: caching
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: gitlab
spec:
  selector:
    matchLabels:
      app: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab
        tier: caching
    spec:
      containers:
      - image: amd64/redis:4.0
        name: redis
        ports:
        - containerPort: 6379
          name: redis-tcp
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 6279
          initialDelaySeconds: 30
          timeoutSeconds: 30
---
##########################################################################
# GitLab
##########################################################################
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  labels:
    app: gitlab
    tiers: webapp
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  - name: ssh
    port: 22
    targetPort: 22
    protocol: TCP
  - name: http-alt
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: gitlab
    tiers: webapp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: gitlab
  name: gitlab-data
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 512Mi
  selector:
    matchLabels:
      app: gitlab
      tiers: webapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  labels:
    app: gitlab
    tiers: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab
        tiers: webapp
    spec:
      containers:
      - image: gitlab/gitlab-ce:latest
        name: gitlab
        env:
        - name: GITLAB_IDP_CERT_FINGERPRINT
          valueFrom:
            secretKeyRef:
              name: gitlab-saml-pass
              key: gitlab.saml.password.txt
        - name: GITLAB_LDAP_BIND_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-ldap-pass
              key: gitlab.ldap.password.txt
        - name: GITLAB_SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-smtp-pass
              key: gitlab.smtp.password.txt
        - name: GITLAB_IMAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-imap-pass
              key: gitlab.imap.password.txt
        - name: GITLAB_DATABASE_ADAPTER
          value: postgresql
        - name: GITLAB_DATABASE_HOST
          value: postgres
        - name: GITLAB_DATABASE_PORT
          value: "5432"
        - name: GITLAB_DATABASE_DATABASE
          value: "gitlab"
        - name: GITLAB_DATABASE_USERNAME
          value: gitlab
        # $ kubectl create secret generic postgres-pass --from-file=gitlab.postgres.password.txt
        # make sure postgres.password.txt does not have a trailing newline
        - name: GITLAB_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-postgres-pass
              key: gitlab.postgres.password.txt
        - name: GITLAB_OMNIBUS_CONFIG
          value: |-
            external_url 'https://gitlab.example.com'
            nginx['listen_port'] = 80
            nginx['listen_https'] = false
            nginx['proxy_set_headers'] = {
               "X-Forwarded-Proto" => "https",
               "X-Forwarded-Ssl" => "on"
            }
    
            gitlab_rails['gitlab_shell_ssh_port'] = 22
            
            # https://docs.gitlab.com/omnibus/settings/smtp.html
            gitlab_rails['smtp_enable'] = false
            gitlab_rails['smtp_address'] = "smtp.mailgun.org"
            gitlab_rails['smtp_port'] = 587
            gitlab_rails['smtp_authentication'] = "plain"
            gitlab_rails['smtp_enable_starttls_auto'] = true
            gitlab_rails['smtp_user_name'] = "postmaster@mg.gitlab.com"
            gitlab_rails['smtp_password'] = "8b6ffrmle180"
            gitlab_rails['smtp_domain'] = "mg.gitlab.com"
            
            # https://docs.gitlab.com/omnibus/settings/redis.html
            gitlab_rails['redis_host'] = "redis"
            gitlab_rails['redis_port'] = "6379"
            gitlab_rails['redis_database'] = 0
            gitlab_rails['redis_socket'] = "/var/opt/gitlab/redis/redis.socket"
            
            # https://docs.gitlab.com/ee/administration/environment_variables.html
            #gitlab_rails['db_adapter'] = "${GITLAB_DATABASE_ADAPTER}"
            #gitlab_rails['db_host'] = "${GITLAB_DATABASE_HOST}"
            #gitlab_rails['db_port'] = "${GITLAB_DATABASE_PORT}"
            #gitlab_rails['db_database'] = "${GITLAB_DATABASE_DATABASE}"
            #gitlab_rails['db_username'] = "${GITLAB_DATABASE_USERNAME}"
            #gitlab_rails['db_password'] = "${GITLAB_DATABASE_PASSWORD}"
            
            # https://docs.gitlab.com/omnibus/settings/ldap.html
            gitlab_rails['omniauth_enabled'] = "false"
            gitlab_rails['omniauth_auto_link_ldap_user'] = "true"
            gitlab_rails['omniauth_block_auto_created_users'] = "true"
            gitlab_rails['omniauth_allow_single_sign_on'] = ['saml']
            gitlab_rails['omniauth_auto_link_saml_user'] = "true"
            gitlab_rails['omniauth_providers'] = [
                {
                  name: 'saml',
                  label:'VMware Identity Manager',
                  args: {
                           assertion_consumer_service_url: 'https://gitlab.example.com/users/auth/saml/callback',
                           GITLAB_IDP_CERT_FINGERPRINT: "${GITLAB_IDP_CERT_FINGERPRINT}",
                           idp_sso_target_url: 'https://vmware-workspace.example.com/SAAS/auth/federation/sso',
                           issuer: 'https://gitlab.example.com',
                           name_identifier_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent'
                         },
                }
            ]
            gitlab_rails['omniauth_auto_sign_in_with_provider'] = 'saml'
    
            gitlab_rails['ldap_enabled'] = false
            gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'
              main: # 'main' is the GitLab 'provider ID' of this LDAP server
                label: 'Active Directory'
                host: 'example.com'
                port: 389
                uid: 'sAMAccountName'
                method: 'plain' # "tls" or "ssl" or "plain"
                bind_dn: 'CN=LDAP GitLab,OU=USERS,DC=EXAMPLE,DC=COM'
                password: "${GITLAB_LDAP_BIND_PASSWORD}"
                active_directory: true
                allow_username_or_email_login: true
                block_auto_created_users: true
                base: 'dc=example, dc=com'
                user_filter: '(memberOf=CN=GITLAB USERGROUP,OU=GROUPS,DC=EXAMPLE,DC=COM)'
                attributes:
                  username: ['uid', 'userid', 'sAMAccountName']
                  email:    ['mail', 'email', 'userPrincipalName']
                  name:       'cn'
                  first_name: 'givenName'
                  last_name:  'sn'
            EOS
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: gitlab-data
          mountPath: /var/opt/gitlab
        livenessProbe:
          tcpSocket:
              port: 80
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 80
          timeoutSeconds: 5
      volumes:
      - name: gitlab-data
        persistentVolumeClaim:
          claimName: gitlab-data
---
